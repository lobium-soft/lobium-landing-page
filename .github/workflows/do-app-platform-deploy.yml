name: Deploy to DigitalOcean App Platform

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    name: Build and Deploy to DigitalOcean App Platform
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      # Use pre-created app.yaml file in repo
      - name: Verify app.yaml exists
        run: |
          if [ ! -f ".do/app.yaml" ]; then
            echo "Error: .do/app.yaml file not found!"
            echo "Please make sure the file exists in your repository."
            exit 1
          else
            echo "Found app.yaml file, proceeding with deployment."
            cat .do/app.yaml
          fi
      
      - name: Prepare GitHub Registry Credentials
        run: |
          # Store the GitHub credentials as environment variables
          echo "GITHUB_USERNAME=${{ github.actor }}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
      
      - name: Initial App Creation Setup
        run: |
          # Check if app already exists
          # Create a temp file with the secret values for first deployment only
          sed -i "s|\${github_username}|${{ github.actor }}|g; s|\${github_token}|${{ secrets.GITHUB_TOKEN }}|g" .do/app.yaml
          cat .do/app.yaml
          echo "Prepared app.yaml with initial credentials for deployment."
      
      - name: Deploy to App Platform
        run: |
          # Check if app already exists
          APP_ID=$(doctl apps list --no-header --format ID,Spec.Name | grep lobium-landing-page | awk '{print $1}')
          
          if [ -z "$APP_ID" ]; then
            echo "Creating new app..."
            doctl apps create --spec .do/app.yaml --wait
          else
            echo "Updating existing app..."
            doctl apps update $APP_ID --spec .do/app.yaml --wait
          fi
      
      - name: Get App URL
        run: |
          APP_ID=$(doctl apps list --no-header --format ID,Spec.Name | grep lobium-landing-page | awk '{print $1}')
          APP_URL=$(doctl apps get $APP_ID --format DefaultIngress | grep -v 'DEFAULT INGRESS')
          
          echo "Application deployed successfully!"
          echo "Your app is available at: https://$APP_URL"
