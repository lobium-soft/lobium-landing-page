/**
 * @module  αUtil
 * @version 1.0.1
 * @desc    Сервисные функции для α-модулей
 * @author  OXAYAZA {@link https://github.com/OXAYAZA}
 * @license CC BY-SA 4.0 {@link https://creativecommons.org/licenses/by-sa/4.0/}
 * @see      {@link https://oxayaza.page.link/linkedin}
 */

function Util() {}

/**
 * Checks if an element is in the viewport
 * @param {Element} element - The DOM element to check
 * @param {Function} cb - Optional callback function to execute if element is in viewport
 * @returns {boolean} - Whether the element is in viewport
 */
Util.inViewport = function(element, cb) {
  var rect = element.getBoundingClientRect(),
      inView = rect.top < window.innerHeight && rect.bottom > 0;
  
  if (cb instanceof Function && inView) cb();
  return inView;
};

/**
 * Merges multiple source objects into a single object
 * @param {Array} sources - Array of objects to merge
 * @param {Object} options - Merge options
 * @returns {Object} - Merged object
 */
Util.merge = function(sources, options) {
  options = options || {};
  var initial = {};
  
  for (var s = 0; s < sources.length; s++) {
    var source = sources[s];
    if (!source) continue;
    
    for (var key in source) {
      if (options.except && !options.except.indexOf(key)) {
        continue;
      } else if (source[key] instanceof Object && 
                !(source[key] instanceof Node) && 
                !(source[key] instanceof Function)) {
        initial[key] = Util.merge([initial[key], source[key]], options);
      } else if (options.skipNull && source[key] === null) {
        continue;
      } else {
        initial[key] = source[key];
      }
    }
  }
  
  return initial;
};

/**
 * Generates a random ID of specified length
 * @param {number} length - Length of the ID to generate
 * @returns {string} - Generated random ID
 */
Util.uId = function(length) {
  var uId = "";
  for (var i = 0; i < length; i++) {
    uId += String.fromCharCode(97 + Math.random() * 25);
  }
  return uId;
};

window.Util = Util;